//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ChemProV.Library.OsbleRemoteServices {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class Course : ChemProV.Library.OsbleRemoteServices.AbstractCourse {
        
        private bool AllowDashboardRepliesField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> AssignmentsField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Category> CategoriesField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CourseBreak> CourseBreaksField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CourseMeeting> CourseMeetingsField;
        
        private System.DateTime EndDateField;
        
        private int HoursLatePerPercentPenaltyField;
        
        private int HoursLateUntilZeroField;
        
        private bool InactiveField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.LetterGrade> LetterGradesField;
        
        private int MinutesLateWithNoPenaltyField;
        
        private string NumberField;
        
        private int PercentPenaltyField;
        
        private string PrefixField;
        
        private bool RequireInstructorApprovalForEventPostingField;
        
        private string SemesterField;
        
        private bool ShowMeetingsField;
        
        private System.DateTime StartDateField;
        
        private string YearField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowDashboardReplies {
            get {
                return this.AllowDashboardRepliesField;
            }
            set {
                if ((this.AllowDashboardRepliesField.Equals(value) != true)) {
                    this.AllowDashboardRepliesField = value;
                    this.RaisePropertyChanged("AllowDashboardReplies");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> Assignments {
            get {
                return this.AssignmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentsField, value) != true)) {
                    this.AssignmentsField = value;
                    this.RaisePropertyChanged("Assignments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Category> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CourseBreak> CourseBreaks {
            get {
                return this.CourseBreaksField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseBreaksField, value) != true)) {
                    this.CourseBreaksField = value;
                    this.RaisePropertyChanged("CourseBreaks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CourseMeeting> CourseMeetings {
            get {
                return this.CourseMeetingsField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseMeetingsField, value) != true)) {
                    this.CourseMeetingsField = value;
                    this.RaisePropertyChanged("CourseMeetings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoursLatePerPercentPenalty {
            get {
                return this.HoursLatePerPercentPenaltyField;
            }
            set {
                if ((this.HoursLatePerPercentPenaltyField.Equals(value) != true)) {
                    this.HoursLatePerPercentPenaltyField = value;
                    this.RaisePropertyChanged("HoursLatePerPercentPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoursLateUntilZero {
            get {
                return this.HoursLateUntilZeroField;
            }
            set {
                if ((this.HoursLateUntilZeroField.Equals(value) != true)) {
                    this.HoursLateUntilZeroField = value;
                    this.RaisePropertyChanged("HoursLateUntilZero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Inactive {
            get {
                return this.InactiveField;
            }
            set {
                if ((this.InactiveField.Equals(value) != true)) {
                    this.InactiveField = value;
                    this.RaisePropertyChanged("Inactive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.LetterGrade> LetterGrades {
            get {
                return this.LetterGradesField;
            }
            set {
                if ((object.ReferenceEquals(this.LetterGradesField, value) != true)) {
                    this.LetterGradesField = value;
                    this.RaisePropertyChanged("LetterGrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinutesLateWithNoPenalty {
            get {
                return this.MinutesLateWithNoPenaltyField;
            }
            set {
                if ((this.MinutesLateWithNoPenaltyField.Equals(value) != true)) {
                    this.MinutesLateWithNoPenaltyField = value;
                    this.RaisePropertyChanged("MinutesLateWithNoPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PercentPenalty {
            get {
                return this.PercentPenaltyField;
            }
            set {
                if ((this.PercentPenaltyField.Equals(value) != true)) {
                    this.PercentPenaltyField = value;
                    this.RaisePropertyChanged("PercentPenalty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prefix {
            get {
                return this.PrefixField;
            }
            set {
                if ((object.ReferenceEquals(this.PrefixField, value) != true)) {
                    this.PrefixField = value;
                    this.RaisePropertyChanged("Prefix");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequireInstructorApprovalForEventPosting {
            get {
                return this.RequireInstructorApprovalForEventPostingField;
            }
            set {
                if ((this.RequireInstructorApprovalForEventPostingField.Equals(value) != true)) {
                    this.RequireInstructorApprovalForEventPostingField = value;
                    this.RaisePropertyChanged("RequireInstructorApprovalForEventPosting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Semester {
            get {
                return this.SemesterField;
            }
            set {
                if ((object.ReferenceEquals(this.SemesterField, value) != true)) {
                    this.SemesterField = value;
                    this.RaisePropertyChanged("Semester");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ShowMeetings {
            get {
                return this.ShowMeetingsField;
            }
            set {
                if ((this.ShowMeetingsField.Equals(value) != true)) {
                    this.ShowMeetingsField = value;
                    this.RaisePropertyChanged("ShowMeetings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Year {
            get {
                return this.YearField;
            }
            set {
                if ((object.ReferenceEquals(this.YearField, value) != true)) {
                    this.YearField = value;
                    this.RaisePropertyChanged("Year");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractCourse", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemProV.Library.OsbleRemoteServices.Community))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemProV.Library.OsbleRemoteServices.Course))]
    public partial class AbstractCourse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowDashboardPostsField;
        
        private bool AllowEventPostingField;
        
        private int CalendarWindowOfTimeField;
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowDashboardPosts {
            get {
                return this.AllowDashboardPostsField;
            }
            set {
                if ((this.AllowDashboardPostsField.Equals(value) != true)) {
                    this.AllowDashboardPostsField = value;
                    this.RaisePropertyChanged("AllowDashboardPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowEventPosting {
            get {
                return this.AllowEventPostingField;
            }
            set {
                if ((this.AllowEventPostingField.Equals(value) != true)) {
                    this.AllowEventPostingField = value;
                    this.RaisePropertyChanged("AllowEventPosting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CalendarWindowOfTime {
            get {
                return this.CalendarWindowOfTimeField;
            }
            set {
                if ((this.CalendarWindowOfTimeField.Equals(value) != true)) {
                    this.CalendarWindowOfTimeField = value;
                    this.RaisePropertyChanged("CalendarWindowOfTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Community", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class Community : ChemProV.Library.OsbleRemoteServices.AbstractCourse {
        
        private string DescriptionField;
        
        private string NicknameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nickname {
            get {
                return this.NicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.NicknameField, value) != true)) {
                    this.NicknameField = value;
                    this.RaisePropertyChanged("Nickname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Assignment", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class Assignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssignmentDescriptionField;
        
        private string AssignmentNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.AssignmentTeam> AssignmentTeamsField;
        
        private int AssignmentTypeIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Event AssociatedEventField;
        
        private System.Nullable<int> AssociatedEventIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Category CategoryField;
        
        private int CategoryIDField;
        
        private int ColumnOrderField;
        
        private ChemProV.Library.OsbleRemoteServices.CommentCategoryConfiguration CommentCategoryField;
        
        private System.Nullable<int> CommentCategoryIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Course CourseField;
        
        private System.Nullable<int> CourseIDField;
        
        private System.Nullable<System.DateTime> CriticalReviewPublishDateField;
        
        private double DeductionPerUnitField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Deliverable> DeliverablesField;
        
        private ChemProV.Library.OsbleRemoteServices.DiscussionSetting DiscussionSettingsField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.DiscussionTeam> DiscussionTeamsField;
        
        private System.DateTime DueDateField;
        
        private System.DateTime DueTimeField;
        
        private int HoursLateWindowField;
        
        private double HoursPerDeductionField;
        
        private int IDField;
        
        private bool IsDraftField;
        
        private bool IsWizardAssignmentField;
        
        private int PointsPossibleField;
        
        private System.Nullable<int> PrecededingAssignmentIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Assignment PreceedingAssignmentField;
        
        private System.DateTime ReleaseDateField;
        
        private System.DateTime ReleaseTimeField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.ReviewTeam> ReviewTeamsField;
        
        private ChemProV.Library.OsbleRemoteServices.Rubric RubricField;
        
        private System.Nullable<int> RubricIDField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Score> ScoresField;
        
        private ChemProV.Library.OsbleRemoteServices.TeamEvaluationSettings TeamEvaluationSettingsField;
        
        private ChemProV.Library.OsbleRemoteServices.AssignmentTypes TypeField;
        
        private double addedPointsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignmentDescription {
            get {
                return this.AssignmentDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentDescriptionField, value) != true)) {
                    this.AssignmentDescriptionField = value;
                    this.RaisePropertyChanged("AssignmentDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignmentName {
            get {
                return this.AssignmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentNameField, value) != true)) {
                    this.AssignmentNameField = value;
                    this.RaisePropertyChanged("AssignmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.AssignmentTeam> AssignmentTeams {
            get {
                return this.AssignmentTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentTeamsField, value) != true)) {
                    this.AssignmentTeamsField = value;
                    this.RaisePropertyChanged("AssignmentTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentTypeID {
            get {
                return this.AssignmentTypeIDField;
            }
            set {
                if ((this.AssignmentTypeIDField.Equals(value) != true)) {
                    this.AssignmentTypeIDField = value;
                    this.RaisePropertyChanged("AssignmentTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Event AssociatedEvent {
            get {
                return this.AssociatedEventField;
            }
            set {
                if ((object.ReferenceEquals(this.AssociatedEventField, value) != true)) {
                    this.AssociatedEventField = value;
                    this.RaisePropertyChanged("AssociatedEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AssociatedEventID {
            get {
                return this.AssociatedEventIDField;
            }
            set {
                if ((this.AssociatedEventIDField.Equals(value) != true)) {
                    this.AssociatedEventIDField = value;
                    this.RaisePropertyChanged("AssociatedEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColumnOrder {
            get {
                return this.ColumnOrderField;
            }
            set {
                if ((this.ColumnOrderField.Equals(value) != true)) {
                    this.ColumnOrderField = value;
                    this.RaisePropertyChanged("ColumnOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.CommentCategoryConfiguration CommentCategory {
            get {
                return this.CommentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentCategoryField, value) != true)) {
                    this.CommentCategoryField = value;
                    this.RaisePropertyChanged("CommentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CommentCategoryID {
            get {
                return this.CommentCategoryIDField;
            }
            set {
                if ((this.CommentCategoryIDField.Equals(value) != true)) {
                    this.CommentCategoryIDField = value;
                    this.RaisePropertyChanged("CommentCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Course Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CourseID {
            get {
                return this.CourseIDField;
            }
            set {
                if ((this.CourseIDField.Equals(value) != true)) {
                    this.CourseIDField = value;
                    this.RaisePropertyChanged("CourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CriticalReviewPublishDate {
            get {
                return this.CriticalReviewPublishDateField;
            }
            set {
                if ((this.CriticalReviewPublishDateField.Equals(value) != true)) {
                    this.CriticalReviewPublishDateField = value;
                    this.RaisePropertyChanged("CriticalReviewPublishDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DeductionPerUnit {
            get {
                return this.DeductionPerUnitField;
            }
            set {
                if ((this.DeductionPerUnitField.Equals(value) != true)) {
                    this.DeductionPerUnitField = value;
                    this.RaisePropertyChanged("DeductionPerUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Deliverable> Deliverables {
            get {
                return this.DeliverablesField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliverablesField, value) != true)) {
                    this.DeliverablesField = value;
                    this.RaisePropertyChanged("Deliverables");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.DiscussionSetting DiscussionSettings {
            get {
                return this.DiscussionSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscussionSettingsField, value) != true)) {
                    this.DiscussionSettingsField = value;
                    this.RaisePropertyChanged("DiscussionSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.DiscussionTeam> DiscussionTeams {
            get {
                return this.DiscussionTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.DiscussionTeamsField, value) != true)) {
                    this.DiscussionTeamsField = value;
                    this.RaisePropertyChanged("DiscussionTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueTime {
            get {
                return this.DueTimeField;
            }
            set {
                if ((this.DueTimeField.Equals(value) != true)) {
                    this.DueTimeField = value;
                    this.RaisePropertyChanged("DueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HoursLateWindow {
            get {
                return this.HoursLateWindowField;
            }
            set {
                if ((this.HoursLateWindowField.Equals(value) != true)) {
                    this.HoursLateWindowField = value;
                    this.RaisePropertyChanged("HoursLateWindow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double HoursPerDeduction {
            get {
                return this.HoursPerDeductionField;
            }
            set {
                if ((this.HoursPerDeductionField.Equals(value) != true)) {
                    this.HoursPerDeductionField = value;
                    this.RaisePropertyChanged("HoursPerDeduction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDraft {
            get {
                return this.IsDraftField;
            }
            set {
                if ((this.IsDraftField.Equals(value) != true)) {
                    this.IsDraftField = value;
                    this.RaisePropertyChanged("IsDraft");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWizardAssignment {
            get {
                return this.IsWizardAssignmentField;
            }
            set {
                if ((this.IsWizardAssignmentField.Equals(value) != true)) {
                    this.IsWizardAssignmentField = value;
                    this.RaisePropertyChanged("IsWizardAssignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PointsPossible {
            get {
                return this.PointsPossibleField;
            }
            set {
                if ((this.PointsPossibleField.Equals(value) != true)) {
                    this.PointsPossibleField = value;
                    this.RaisePropertyChanged("PointsPossible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> PrecededingAssignmentID {
            get {
                return this.PrecededingAssignmentIDField;
            }
            set {
                if ((this.PrecededingAssignmentIDField.Equals(value) != true)) {
                    this.PrecededingAssignmentIDField = value;
                    this.RaisePropertyChanged("PrecededingAssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment PreceedingAssignment {
            get {
                return this.PreceedingAssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.PreceedingAssignmentField, value) != true)) {
                    this.PreceedingAssignmentField = value;
                    this.RaisePropertyChanged("PreceedingAssignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseTime {
            get {
                return this.ReleaseTimeField;
            }
            set {
                if ((this.ReleaseTimeField.Equals(value) != true)) {
                    this.ReleaseTimeField = value;
                    this.RaisePropertyChanged("ReleaseTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.ReviewTeam> ReviewTeams {
            get {
                return this.ReviewTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewTeamsField, value) != true)) {
                    this.ReviewTeamsField = value;
                    this.RaisePropertyChanged("ReviewTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Rubric Rubric {
            get {
                return this.RubricField;
            }
            set {
                if ((object.ReferenceEquals(this.RubricField, value) != true)) {
                    this.RubricField = value;
                    this.RaisePropertyChanged("Rubric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RubricID {
            get {
                return this.RubricIDField;
            }
            set {
                if ((this.RubricIDField.Equals(value) != true)) {
                    this.RubricIDField = value;
                    this.RaisePropertyChanged("RubricID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Score> Scores {
            get {
                return this.ScoresField;
            }
            set {
                if ((object.ReferenceEquals(this.ScoresField, value) != true)) {
                    this.ScoresField = value;
                    this.RaisePropertyChanged("Scores");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.TeamEvaluationSettings TeamEvaluationSettings {
            get {
                return this.TeamEvaluationSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamEvaluationSettingsField, value) != true)) {
                    this.TeamEvaluationSettingsField = value;
                    this.RaisePropertyChanged("TeamEvaluationSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.AssignmentTypes Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double addedPoints {
            get {
                return this.addedPointsField;
            }
            set {
                if ((this.addedPointsField.Equals(value) != true)) {
                    this.addedPointsField = value;
                    this.RaisePropertyChanged("addedPoints");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class Category : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> AssignmentsField;
        
        private int ColumnOrderField;
        
        private ChemProV.Library.OsbleRemoteServices.Course CourseField;
        
        private int CourseIDField;
        
        private int CustomizeField;
        
        private int IDField;
        
        private double MaxAssignmentScoreField;
        
        private string NameField;
        
        private double PointsField;
        
        private string TabColorField;
        
        private int dropXField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> Assignments {
            get {
                return this.AssignmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentsField, value) != true)) {
                    this.AssignmentsField = value;
                    this.RaisePropertyChanged("Assignments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ColumnOrder {
            get {
                return this.ColumnOrderField;
            }
            set {
                if ((this.ColumnOrderField.Equals(value) != true)) {
                    this.ColumnOrderField = value;
                    this.RaisePropertyChanged("ColumnOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Course Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseID {
            get {
                return this.CourseIDField;
            }
            set {
                if ((this.CourseIDField.Equals(value) != true)) {
                    this.CourseIDField = value;
                    this.RaisePropertyChanged("CourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Customize {
            get {
                return this.CustomizeField;
            }
            set {
                if ((this.CustomizeField.Equals(value) != true)) {
                    this.CustomizeField = value;
                    this.RaisePropertyChanged("Customize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaxAssignmentScore {
            get {
                return this.MaxAssignmentScoreField;
            }
            set {
                if ((this.MaxAssignmentScoreField.Equals(value) != true)) {
                    this.MaxAssignmentScoreField = value;
                    this.RaisePropertyChanged("MaxAssignmentScore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TabColor {
            get {
                return this.TabColorField;
            }
            set {
                if ((object.ReferenceEquals(this.TabColorField, value) != true)) {
                    this.TabColorField = value;
                    this.RaisePropertyChanged("TabColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dropX {
            get {
                return this.dropXField;
            }
            set {
                if ((this.dropXField.Equals(value) != true)) {
                    this.dropXField = value;
                    this.RaisePropertyChanged("dropX");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseBreak", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class CourseBreak : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime EndDateField;
        
        private int IDField;
        
        private string NameField;
        
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseMeeting", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class CourseMeeting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime EndTimeField;
        
        private bool FridayField;
        
        private int IDField;
        
        private string LocationField;
        
        private bool MondayField;
        
        private string NameField;
        
        private bool SaturdayField;
        
        private System.DateTime StartTimeField;
        
        private bool SundayField;
        
        private bool ThursdayField;
        
        private bool TuesdayField;
        
        private bool WednesdayField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Friday {
            get {
                return this.FridayField;
            }
            set {
                if ((this.FridayField.Equals(value) != true)) {
                    this.FridayField = value;
                    this.RaisePropertyChanged("Friday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Monday {
            get {
                return this.MondayField;
            }
            set {
                if ((this.MondayField.Equals(value) != true)) {
                    this.MondayField = value;
                    this.RaisePropertyChanged("Monday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Saturday {
            get {
                return this.SaturdayField;
            }
            set {
                if ((this.SaturdayField.Equals(value) != true)) {
                    this.SaturdayField = value;
                    this.RaisePropertyChanged("Saturday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Sunday {
            get {
                return this.SundayField;
            }
            set {
                if ((this.SundayField.Equals(value) != true)) {
                    this.SundayField = value;
                    this.RaisePropertyChanged("Sunday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Thursday {
            get {
                return this.ThursdayField;
            }
            set {
                if ((this.ThursdayField.Equals(value) != true)) {
                    this.ThursdayField = value;
                    this.RaisePropertyChanged("Thursday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Tuesday {
            get {
                return this.TuesdayField;
            }
            set {
                if ((this.TuesdayField.Equals(value) != true)) {
                    this.TuesdayField = value;
                    this.RaisePropertyChanged("Tuesday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Wednesday {
            get {
                return this.WednesdayField;
            }
            set {
                if ((this.WednesdayField.Equals(value) != true)) {
                    this.WednesdayField = value;
                    this.RaisePropertyChanged("Wednesday");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LetterGrade", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class LetterGrade : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.Course CourseField;
        
        private int CourseIDField;
        
        private string GradeField;
        
        private int IDField;
        
        private int MinimumRequiredField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Course Course {
            get {
                return this.CourseField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseField, value) != true)) {
                    this.CourseField = value;
                    this.RaisePropertyChanged("Course");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseID {
            get {
                return this.CourseIDField;
            }
            set {
                if ((this.CourseIDField.Equals(value) != true)) {
                    this.CourseIDField = value;
                    this.RaisePropertyChanged("CourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumRequired {
            get {
                return this.MinimumRequiredField;
            }
            set {
                if ((this.MinimumRequiredField.Equals(value) != true)) {
                    this.MinimumRequiredField = value;
                    this.RaisePropertyChanged("MinimumRequired");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.HomePage")]
    public partial class Event : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ApprovedField;
        
        private string DescriptionField;
        
        private System.Nullable<System.DateTime> EndDateField;
        
        private System.DateTime EndTimeField;
        
        private bool HideDeleteField;
        
        private bool HideTimeField;
        
        private int IDField;
        
        private bool NoDateTimeField;
        
        private ChemProV.Library.OsbleRemoteServices.CourseUser PosterField;
        
        private int PosterIDField;
        
        private System.DateTime StartDateField;
        
        private System.DateTime StartTimeField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Approved {
            get {
                return this.ApprovedField;
            }
            set {
                if ((this.ApprovedField.Equals(value) != true)) {
                    this.ApprovedField = value;
                    this.RaisePropertyChanged("Approved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HideDelete {
            get {
                return this.HideDeleteField;
            }
            set {
                if ((this.HideDeleteField.Equals(value) != true)) {
                    this.HideDeleteField = value;
                    this.RaisePropertyChanged("HideDelete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HideTime {
            get {
                return this.HideTimeField;
            }
            set {
                if ((this.HideTimeField.Equals(value) != true)) {
                    this.HideTimeField = value;
                    this.RaisePropertyChanged("HideTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoDateTime {
            get {
                return this.NoDateTimeField;
            }
            set {
                if ((this.NoDateTimeField.Equals(value) != true)) {
                    this.NoDateTimeField = value;
                    this.RaisePropertyChanged("NoDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.CourseUser Poster {
            get {
                return this.PosterField;
            }
            set {
                if ((object.ReferenceEquals(this.PosterField, value) != true)) {
                    this.PosterField = value;
                    this.RaisePropertyChanged("Poster");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PosterID {
            get {
                return this.PosterIDField;
            }
            set {
                if ((this.PosterIDField.Equals(value) != true)) {
                    this.PosterIDField = value;
                    this.RaisePropertyChanged("PosterID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentCategoryConfiguration", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class CommentCategoryConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CommentCategory> CategoriesField;
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CommentCategory> Categories {
            get {
                return this.CategoriesField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoriesField, value) != true)) {
                    this.CategoriesField = value;
                    this.RaisePropertyChanged("Categories");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiscussionSetting", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class DiscussionSetting : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte AnonymitySettingsField;
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private bool HasAnonymousPostsField;
        
        private bool HasAnonymousRolesField;
        
        private System.DateTime InitialPostDueDateField;
        
        private System.DateTime InitialPostDueDueTimeField;
        
        private int MinimumFirstPostLengthField;
        
        private bool RequiresPostBeforeViewField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte AnonymitySettings {
            get {
                return this.AnonymitySettingsField;
            }
            set {
                if ((this.AnonymitySettingsField.Equals(value) != true)) {
                    this.AnonymitySettingsField = value;
                    this.RaisePropertyChanged("AnonymitySettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAnonymousPosts {
            get {
                return this.HasAnonymousPostsField;
            }
            set {
                if ((this.HasAnonymousPostsField.Equals(value) != true)) {
                    this.HasAnonymousPostsField = value;
                    this.RaisePropertyChanged("HasAnonymousPosts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAnonymousRoles {
            get {
                return this.HasAnonymousRolesField;
            }
            set {
                if ((this.HasAnonymousRolesField.Equals(value) != true)) {
                    this.HasAnonymousRolesField = value;
                    this.RaisePropertyChanged("HasAnonymousRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitialPostDueDate {
            get {
                return this.InitialPostDueDateField;
            }
            set {
                if ((this.InitialPostDueDateField.Equals(value) != true)) {
                    this.InitialPostDueDateField = value;
                    this.RaisePropertyChanged("InitialPostDueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InitialPostDueDueTime {
            get {
                return this.InitialPostDueDueTimeField;
            }
            set {
                if ((this.InitialPostDueDueTimeField.Equals(value) != true)) {
                    this.InitialPostDueDueTimeField = value;
                    this.RaisePropertyChanged("InitialPostDueDueTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumFirstPostLength {
            get {
                return this.MinimumFirstPostLengthField;
            }
            set {
                if ((this.MinimumFirstPostLengthField.Equals(value) != true)) {
                    this.MinimumFirstPostLengthField = value;
                    this.RaisePropertyChanged("MinimumFirstPostLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RequiresPostBeforeView {
            get {
                return this.RequiresPostBeforeViewField;
            }
            set {
                if ((this.RequiresPostBeforeViewField.Equals(value) != true)) {
                    this.RequiresPostBeforeViewField = value;
                    this.RaisePropertyChanged("RequiresPostBeforeView");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Rubric", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses.Rubrics")]
    public partial class Rubric : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Criterion> CriteriaField;
        
        private string DescriptionField;
        
        private bool HasCriteriaCommentsField;
        
        private bool HasGlobalCommentsField;
        
        private int IDField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Level> LevelsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Criterion> Criteria {
            get {
                return this.CriteriaField;
            }
            set {
                if ((object.ReferenceEquals(this.CriteriaField, value) != true)) {
                    this.CriteriaField = value;
                    this.RaisePropertyChanged("Criteria");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasCriteriaComments {
            get {
                return this.HasCriteriaCommentsField;
            }
            set {
                if ((this.HasCriteriaCommentsField.Equals(value) != true)) {
                    this.HasCriteriaCommentsField = value;
                    this.RaisePropertyChanged("HasCriteriaComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasGlobalComments {
            get {
                return this.HasGlobalCommentsField;
            }
            set {
                if ((this.HasGlobalCommentsField.Equals(value) != true)) {
                    this.HasGlobalCommentsField = value;
                    this.RaisePropertyChanged("HasGlobalComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Level> Levels {
            get {
                return this.LevelsField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelsField, value) != true)) {
                    this.LevelsField = value;
                    this.RaisePropertyChanged("Levels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamEvaluationSettings", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class TeamEvaluationSettings : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private int DiscrepancyCheckSizeField;
        
        private double MaximumMultiplierField;
        
        private int RequiredCommentLengthField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiscrepancyCheckSize {
            get {
                return this.DiscrepancyCheckSizeField;
            }
            set {
                if ((this.DiscrepancyCheckSizeField.Equals(value) != true)) {
                    this.DiscrepancyCheckSizeField = value;
                    this.RaisePropertyChanged("DiscrepancyCheckSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaximumMultiplier {
            get {
                return this.MaximumMultiplierField;
            }
            set {
                if ((this.MaximumMultiplierField.Equals(value) != true)) {
                    this.MaximumMultiplierField = value;
                    this.RaisePropertyChanged("MaximumMultiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredCommentLength {
            get {
                return this.RequiredCommentLengthField;
            }
            set {
                if ((this.RequiredCommentLengthField.Equals(value) != true)) {
                    this.RequiredCommentLengthField = value;
                    this.RaisePropertyChanged("RequiredCommentLength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentTeam", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class AssignmentTeam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Team TeamField;
        
        private int TeamIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team Team {
            get {
                return this.TeamField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamField, value) != true)) {
                    this.TeamField = value;
                    this.RaisePropertyChanged("Team");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Deliverable", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class Deliverable : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private ChemProV.Library.OsbleRemoteServices.DeliverableType DeliverableTypeField;
        
        private System.Collections.ObjectModel.ObservableCollection<string> FileExtensionsField;
        
        private string NameField;
        
        private int TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.DeliverableType DeliverableType {
            get {
                return this.DeliverableTypeField;
            }
            set {
                if ((this.DeliverableTypeField.Equals(value) != true)) {
                    this.DeliverableTypeField = value;
                    this.RaisePropertyChanged("DeliverableType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> FileExtensions {
            get {
                return this.FileExtensionsField;
            }
            set {
                if ((object.ReferenceEquals(this.FileExtensionsField, value) != true)) {
                    this.FileExtensionsField = value;
                    this.RaisePropertyChanged("FileExtensions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DiscussionTeam", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class DiscussionTeam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Team AuthorTeamField;
        
        private System.Nullable<int> AuthorTeamIDField;
        
        private int IDField;
        
        private ChemProV.Library.OsbleRemoteServices.Team TeamField;
        
        private int TeamIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team AuthorTeam {
            get {
                return this.AuthorTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorTeamField, value) != true)) {
                    this.AuthorTeamField = value;
                    this.RaisePropertyChanged("AuthorTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> AuthorTeamID {
            get {
                return this.AuthorTeamIDField;
            }
            set {
                if ((this.AuthorTeamIDField.Equals(value) != true)) {
                    this.AuthorTeamIDField = value;
                    this.RaisePropertyChanged("AuthorTeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team Team {
            get {
                return this.TeamField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamField, value) != true)) {
                    this.TeamField = value;
                    this.RaisePropertyChanged("Team");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReviewTeam", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class ReviewTeam : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Team AuthorTeamField;
        
        private int AuthorTeamIDField;
        
        private int ReviewTeamIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Team ReviewingTeamField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team AuthorTeam {
            get {
                return this.AuthorTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorTeamField, value) != true)) {
                    this.AuthorTeamField = value;
                    this.RaisePropertyChanged("AuthorTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorTeamID {
            get {
                return this.AuthorTeamIDField;
            }
            set {
                if ((this.AuthorTeamIDField.Equals(value) != true)) {
                    this.AuthorTeamIDField = value;
                    this.RaisePropertyChanged("AuthorTeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReviewTeamID {
            get {
                return this.ReviewTeamIDField;
            }
            set {
                if ((this.ReviewTeamIDField.Equals(value) != true)) {
                    this.ReviewTeamIDField = value;
                    this.RaisePropertyChanged("ReviewTeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team ReviewingTeam {
            get {
                return this.ReviewingTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewingTeamField, value) != true)) {
                    this.ReviewingTeamField = value;
                    this.RaisePropertyChanged("ReviewingTeam");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Score", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class Score : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AddedPointsField;
        
        private ChemProV.Library.OsbleRemoteServices.Assignment AssignmentField;
        
        private int AssignmentIDField;
        
        private ChemProV.Library.OsbleRemoteServices.CourseUser CourseUserField;
        
        private int CourseUserIDField;
        
        private double CustomLatePenaltyPercentField;
        
        private int IDField;
        
        private double LatePenaltyPercentField;
        
        private System.Nullable<double> MultiplierField;
        
        private double PointsField;
        
        private bool PublishedField;
        
        private System.Nullable<System.DateTime> PublishedDateField;
        
        private double RawPointsField;
        
        private double StudentPointsField;
        
        private ChemProV.Library.OsbleRemoteServices.Team TeamField;
        
        private int TeamIDField;
        
        private bool isDroppedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AddedPoints {
            get {
                return this.AddedPointsField;
            }
            set {
                if ((this.AddedPointsField.Equals(value) != true)) {
                    this.AddedPointsField = value;
                    this.RaisePropertyChanged("AddedPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Assignment Assignment {
            get {
                return this.AssignmentField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignmentField, value) != true)) {
                    this.AssignmentField = value;
                    this.RaisePropertyChanged("Assignment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignmentID {
            get {
                return this.AssignmentIDField;
            }
            set {
                if ((this.AssignmentIDField.Equals(value) != true)) {
                    this.AssignmentIDField = value;
                    this.RaisePropertyChanged("AssignmentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.CourseUser CourseUser {
            get {
                return this.CourseUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseUserField, value) != true)) {
                    this.CourseUserField = value;
                    this.RaisePropertyChanged("CourseUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseUserID {
            get {
                return this.CourseUserIDField;
            }
            set {
                if ((this.CourseUserIDField.Equals(value) != true)) {
                    this.CourseUserIDField = value;
                    this.RaisePropertyChanged("CourseUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CustomLatePenaltyPercent {
            get {
                return this.CustomLatePenaltyPercentField;
            }
            set {
                if ((this.CustomLatePenaltyPercentField.Equals(value) != true)) {
                    this.CustomLatePenaltyPercentField = value;
                    this.RaisePropertyChanged("CustomLatePenaltyPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LatePenaltyPercent {
            get {
                return this.LatePenaltyPercentField;
            }
            set {
                if ((this.LatePenaltyPercentField.Equals(value) != true)) {
                    this.LatePenaltyPercentField = value;
                    this.RaisePropertyChanged("LatePenaltyPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Multiplier {
            get {
                return this.MultiplierField;
            }
            set {
                if ((this.MultiplierField.Equals(value) != true)) {
                    this.MultiplierField = value;
                    this.RaisePropertyChanged("Multiplier");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Points {
            get {
                return this.PointsField;
            }
            set {
                if ((this.PointsField.Equals(value) != true)) {
                    this.PointsField = value;
                    this.RaisePropertyChanged("Points");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Published {
            get {
                return this.PublishedField;
            }
            set {
                if ((this.PublishedField.Equals(value) != true)) {
                    this.PublishedField = value;
                    this.RaisePropertyChanged("Published");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PublishedDate {
            get {
                return this.PublishedDateField;
            }
            set {
                if ((this.PublishedDateField.Equals(value) != true)) {
                    this.PublishedDateField = value;
                    this.RaisePropertyChanged("PublishedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RawPoints {
            get {
                return this.RawPointsField;
            }
            set {
                if ((this.RawPointsField.Equals(value) != true)) {
                    this.RawPointsField = value;
                    this.RaisePropertyChanged("RawPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double StudentPoints {
            get {
                return this.StudentPointsField;
            }
            set {
                if ((this.StudentPointsField.Equals(value) != true)) {
                    this.StudentPointsField = value;
                    this.RaisePropertyChanged("StudentPoints");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team Team {
            get {
                return this.TeamField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamField, value) != true)) {
                    this.TeamField = value;
                    this.RaisePropertyChanged("Team");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isDropped {
            get {
                return this.isDroppedField;
            }
            set {
                if ((this.isDroppedField.Equals(value) != true)) {
                    this.isDroppedField = value;
                    this.RaisePropertyChanged("isDropped");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssignmentTypes", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public enum AssignmentTypes : byte {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CriticalReview = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscussionAssignment = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TeamEvaluation = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CriticalReviewDiscussion = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Team", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class Team : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.TeamMember> TeamMembersField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.AssignmentTeam> UsedAsAssignmentTeamField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.DiscussionTeam> UsedAsDiscussionTeamField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.ReviewTeam> UsedAsReviewTeamField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> UsedInAssignmentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.TeamMember> TeamMembers {
            get {
                return this.TeamMembersField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamMembersField, value) != true)) {
                    this.TeamMembersField = value;
                    this.RaisePropertyChanged("TeamMembers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.AssignmentTeam> UsedAsAssignmentTeam {
            get {
                return this.UsedAsAssignmentTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.UsedAsAssignmentTeamField, value) != true)) {
                    this.UsedAsAssignmentTeamField = value;
                    this.RaisePropertyChanged("UsedAsAssignmentTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.DiscussionTeam> UsedAsDiscussionTeam {
            get {
                return this.UsedAsDiscussionTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.UsedAsDiscussionTeamField, value) != true)) {
                    this.UsedAsDiscussionTeamField = value;
                    this.RaisePropertyChanged("UsedAsDiscussionTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.ReviewTeam> UsedAsReviewTeam {
            get {
                return this.UsedAsReviewTeamField;
            }
            set {
                if ((object.ReferenceEquals(this.UsedAsReviewTeamField, value) != true)) {
                    this.UsedAsReviewTeamField = value;
                    this.RaisePropertyChanged("UsedAsReviewTeam");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> UsedInAssignments {
            get {
                return this.UsedInAssignmentsField;
            }
            set {
                if ((object.ReferenceEquals(this.UsedInAssignmentsField, value) != true)) {
                    this.UsedInAssignmentsField = value;
                    this.RaisePropertyChanged("UsedInAssignments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TeamMember", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class TeamMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.CourseUser CourseUserField;
        
        private int CourseUserIDField;
        
        private ChemProV.Library.OsbleRemoteServices.Team TeamField;
        
        private int TeamIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.CourseUser CourseUser {
            get {
                return this.CourseUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseUserField, value) != true)) {
                    this.CourseUserField = value;
                    this.RaisePropertyChanged("CourseUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseUserID {
            get {
                return this.CourseUserIDField;
            }
            set {
                if ((this.CourseUserIDField.Equals(value) != true)) {
                    this.CourseUserIDField = value;
                    this.RaisePropertyChanged("CourseUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Team Team {
            get {
                return this.TeamField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamField, value) != true)) {
                    this.TeamField = value;
                    this.RaisePropertyChanged("Team");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseUser", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class CourseUser : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ChemProV.Library.OsbleRemoteServices.AbstractCourse AbstractCourseField;
        
        private int AbstractCourseIDField;
        
        private ChemProV.Library.OsbleRemoteServices.AbstractRole AbstractRoleField;
        
        private int AbstractRoleIDField;
        
        private bool HiddenField;
        
        private int IDField;
        
        private int SectionField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.TeamMember> TeamMembershipsField;
        
        private ChemProV.Library.OsbleRemoteServices.UserProfile UserProfileField;
        
        private int UserProfileIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.AbstractCourse AbstractCourse {
            get {
                return this.AbstractCourseField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractCourseField, value) != true)) {
                    this.AbstractCourseField = value;
                    this.RaisePropertyChanged("AbstractCourse");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AbstractCourseID {
            get {
                return this.AbstractCourseIDField;
            }
            set {
                if ((this.AbstractCourseIDField.Equals(value) != true)) {
                    this.AbstractCourseIDField = value;
                    this.RaisePropertyChanged("AbstractCourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.AbstractRole AbstractRole {
            get {
                return this.AbstractRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.AbstractRoleField, value) != true)) {
                    this.AbstractRoleField = value;
                    this.RaisePropertyChanged("AbstractRole");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AbstractRoleID {
            get {
                return this.AbstractRoleIDField;
            }
            set {
                if ((this.AbstractRoleIDField.Equals(value) != true)) {
                    this.AbstractRoleIDField = value;
                    this.RaisePropertyChanged("AbstractRoleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Section {
            get {
                return this.SectionField;
            }
            set {
                if ((this.SectionField.Equals(value) != true)) {
                    this.SectionField = value;
                    this.RaisePropertyChanged("Section");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.TeamMember> TeamMemberships {
            get {
                return this.TeamMembershipsField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamMembershipsField, value) != true)) {
                    this.TeamMembershipsField = value;
                    this.RaisePropertyChanged("TeamMemberships");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.UserProfile UserProfile {
            get {
                return this.UserProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.UserProfileField, value) != true)) {
                    this.UserProfileField = value;
                    this.RaisePropertyChanged("UserProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserProfileID {
            get {
                return this.UserProfileIDField;
            }
            set {
                if ((this.UserProfileIDField.Equals(value) != true)) {
                    this.UserProfileIDField = value;
                    this.RaisePropertyChanged("UserProfileID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AbstractRole", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ChemProV.Library.OsbleRemoteServices.CourseRole))]
    public partial class AbstractRole : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AnonymizedField;
        
        private bool CanGradeField;
        
        private bool CanModifyField;
        
        private bool CanSeeAllField;
        
        private bool CanSubmitField;
        
        private bool CanUploadFilesField;
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Anonymized {
            get {
                return this.AnonymizedField;
            }
            set {
                if ((this.AnonymizedField.Equals(value) != true)) {
                    this.AnonymizedField = value;
                    this.RaisePropertyChanged("Anonymized");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanGrade {
            get {
                return this.CanGradeField;
            }
            set {
                if ((this.CanGradeField.Equals(value) != true)) {
                    this.CanGradeField = value;
                    this.RaisePropertyChanged("CanGrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanModify {
            get {
                return this.CanModifyField;
            }
            set {
                if ((this.CanModifyField.Equals(value) != true)) {
                    this.CanModifyField = value;
                    this.RaisePropertyChanged("CanModify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSeeAll {
            get {
                return this.CanSeeAllField;
            }
            set {
                if ((this.CanSeeAllField.Equals(value) != true)) {
                    this.CanSeeAllField = value;
                    this.RaisePropertyChanged("CanSeeAll");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanSubmit {
            get {
                return this.CanSubmitField;
            }
            set {
                if ((this.CanSubmitField.Equals(value) != true)) {
                    this.CanSubmitField = value;
                    this.RaisePropertyChanged("CanSubmit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CanUploadFiles {
            get {
                return this.CanUploadFilesField;
            }
            set {
                if ((this.CanUploadFilesField.Equals(value) != true)) {
                    this.CanUploadFilesField = value;
                    this.RaisePropertyChanged("CanUploadFiles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Users")]
    public partial class UserProfile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AspNetUserNamek__BackingFieldField;
        
        private string AuthenticationHashk__BackingFieldField;
        
        private bool CanCreateCoursesk__BackingFieldField;
        
        private int DefaultCoursek__BackingFieldField;
        
        private bool EmailAllActivityPostsk__BackingFieldField;
        
        private bool EmailAllNotificationsk__BackingFieldField;
        
        private string FirstNamek__BackingFieldField;
        
        private int IDk__BackingFieldField;
        
        private string Identificationk__BackingFieldField;
        
        private bool IsAdmink__BackingFieldField;
        
        private bool IsApprovedk__BackingFieldField;
        
        private string LastNamek__BackingFieldField;
        
        private string Passwordk__BackingFieldField;
        
        private int SchoolIDk__BackingFieldField;
        
        private ChemProV.Library.OsbleRemoteServices.School Schoolk__BackingFieldField;
        
        private int SortByk__BackingFieldField;
        
        private string UserNamek__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AspNetUserName>k__BackingField", IsRequired=true)]
        public string AspNetUserNamek__BackingField {
            get {
                return this.AspNetUserNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AspNetUserNamek__BackingFieldField, value) != true)) {
                    this.AspNetUserNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("AspNetUserNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<AuthenticationHash>k__BackingField", IsRequired=true)]
        public string AuthenticationHashk__BackingField {
            get {
                return this.AuthenticationHashk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthenticationHashk__BackingFieldField, value) != true)) {
                    this.AuthenticationHashk__BackingFieldField = value;
                    this.RaisePropertyChanged("AuthenticationHashk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<CanCreateCourses>k__BackingField", IsRequired=true)]
        public bool CanCreateCoursesk__BackingField {
            get {
                return this.CanCreateCoursesk__BackingFieldField;
            }
            set {
                if ((this.CanCreateCoursesk__BackingFieldField.Equals(value) != true)) {
                    this.CanCreateCoursesk__BackingFieldField = value;
                    this.RaisePropertyChanged("CanCreateCoursesk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<DefaultCourse>k__BackingField", IsRequired=true)]
        public int DefaultCoursek__BackingField {
            get {
                return this.DefaultCoursek__BackingFieldField;
            }
            set {
                if ((this.DefaultCoursek__BackingFieldField.Equals(value) != true)) {
                    this.DefaultCoursek__BackingFieldField = value;
                    this.RaisePropertyChanged("DefaultCoursek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EmailAllActivityPosts>k__BackingField", IsRequired=true)]
        public bool EmailAllActivityPostsk__BackingField {
            get {
                return this.EmailAllActivityPostsk__BackingFieldField;
            }
            set {
                if ((this.EmailAllActivityPostsk__BackingFieldField.Equals(value) != true)) {
                    this.EmailAllActivityPostsk__BackingFieldField = value;
                    this.RaisePropertyChanged("EmailAllActivityPostsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EmailAllNotifications>k__BackingField", IsRequired=true)]
        public bool EmailAllNotificationsk__BackingField {
            get {
                return this.EmailAllNotificationsk__BackingFieldField;
            }
            set {
                if ((this.EmailAllNotificationsk__BackingFieldField.Equals(value) != true)) {
                    this.EmailAllNotificationsk__BackingFieldField = value;
                    this.RaisePropertyChanged("EmailAllNotificationsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FirstName>k__BackingField", IsRequired=true)]
        public string FirstNamek__BackingField {
            get {
                return this.FirstNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNamek__BackingFieldField, value) != true)) {
                    this.FirstNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("FirstNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ID>k__BackingField", IsRequired=true)]
        public int IDk__BackingField {
            get {
                return this.IDk__BackingFieldField;
            }
            set {
                if ((this.IDk__BackingFieldField.Equals(value) != true)) {
                    this.IDk__BackingFieldField = value;
                    this.RaisePropertyChanged("IDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Identification>k__BackingField", IsRequired=true)]
        public string Identificationk__BackingField {
            get {
                return this.Identificationk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Identificationk__BackingFieldField, value) != true)) {
                    this.Identificationk__BackingFieldField = value;
                    this.RaisePropertyChanged("Identificationk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsAdmin>k__BackingField", IsRequired=true)]
        public bool IsAdmink__BackingField {
            get {
                return this.IsAdmink__BackingFieldField;
            }
            set {
                if ((this.IsAdmink__BackingFieldField.Equals(value) != true)) {
                    this.IsAdmink__BackingFieldField = value;
                    this.RaisePropertyChanged("IsAdmink__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsApproved>k__BackingField", IsRequired=true)]
        public bool IsApprovedk__BackingField {
            get {
                return this.IsApprovedk__BackingFieldField;
            }
            set {
                if ((this.IsApprovedk__BackingFieldField.Equals(value) != true)) {
                    this.IsApprovedk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsApprovedk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<LastName>k__BackingField", IsRequired=true)]
        public string LastNamek__BackingField {
            get {
                return this.LastNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNamek__BackingFieldField, value) != true)) {
                    this.LastNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("LastNamek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Password>k__BackingField", IsRequired=true)]
        public string Passwordk__BackingField {
            get {
                return this.Passwordk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Passwordk__BackingFieldField, value) != true)) {
                    this.Passwordk__BackingFieldField = value;
                    this.RaisePropertyChanged("Passwordk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SchoolID>k__BackingField", IsRequired=true)]
        public int SchoolIDk__BackingField {
            get {
                return this.SchoolIDk__BackingFieldField;
            }
            set {
                if ((this.SchoolIDk__BackingFieldField.Equals(value) != true)) {
                    this.SchoolIDk__BackingFieldField = value;
                    this.RaisePropertyChanged("SchoolIDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<School>k__BackingField", IsRequired=true)]
        public ChemProV.Library.OsbleRemoteServices.School Schoolk__BackingField {
            get {
                return this.Schoolk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Schoolk__BackingFieldField, value) != true)) {
                    this.Schoolk__BackingFieldField = value;
                    this.RaisePropertyChanged("Schoolk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SortBy>k__BackingField", IsRequired=true)]
        public int SortByk__BackingField {
            get {
                return this.SortByk__BackingFieldField;
            }
            set {
                if ((this.SortByk__BackingFieldField.Equals(value) != true)) {
                    this.SortByk__BackingFieldField = value;
                    this.RaisePropertyChanged("SortByk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<UserName>k__BackingField", IsRequired=true)]
        public string UserNamek__BackingField {
            get {
                return this.UserNamek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNamek__BackingFieldField, value) != true)) {
                    this.UserNamek__BackingFieldField = value;
                    this.RaisePropertyChanged("UserNamek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseRole", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses")]
    public partial class CourseRole : ChemProV.Library.OsbleRemoteServices.AbstractRole {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="School", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models")]
    public partial class School : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDk__BackingFieldField;
        
        private string Namek__BackingFieldField;
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ID>k__BackingField", IsRequired=true)]
        public int IDk__BackingField {
            get {
                return this.IDk__BackingFieldField;
            }
            set {
                if ((this.IDk__BackingFieldField.Equals(value) != true)) {
                    this.IDk__BackingFieldField = value;
                    this.RaisePropertyChanged("IDk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Name>k__BackingField", IsRequired=true)]
        public string Namek__BackingField {
            get {
                return this.Namek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Namek__BackingFieldField, value) != true)) {
                    this.Namek__BackingFieldField = value;
                    this.RaisePropertyChanged("Namek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentCategory", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class CommentCategory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        private System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CommentCategoryOption> OptionsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.CommentCategoryOption> Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CommentCategoryOption", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public partial class CommentCategoryOption : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeliverableType", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Assignments")]
    public enum DeliverableType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Code = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Text = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChemProV = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        XPS = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Video = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Zip = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InBrowserText = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PowerPoint = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WordDocument = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PDF = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExcelSpreadSheet = 10,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Criterion", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses.Rubrics")]
    public partial class Criterion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CriterionTitleField;
        
        private int IDField;
        
        private ChemProV.Library.OsbleRemoteServices.Rubric RubricField;
        
        private int RubricIDField;
        
        private double WeightField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CriterionTitle {
            get {
                return this.CriterionTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.CriterionTitleField, value) != true)) {
                    this.CriterionTitleField = value;
                    this.RaisePropertyChanged("CriterionTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Rubric Rubric {
            get {
                return this.RubricField;
            }
            set {
                if ((object.ReferenceEquals(this.RubricField, value) != true)) {
                    this.RubricField = value;
                    this.RaisePropertyChanged("Rubric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RubricID {
            get {
                return this.RubricIDField;
            }
            set {
                if ((this.RubricIDField.Equals(value) != true)) {
                    this.RubricIDField = value;
                    this.RaisePropertyChanged("RubricID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Level", Namespace="http://schemas.datacontract.org/2004/07/OSBLE.Models.Courses.Rubrics")]
    public partial class Level : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int IDField;
        
        private string LevelTitleField;
        
        private int RangeEndField;
        
        private int RangeStartField;
        
        private ChemProV.Library.OsbleRemoteServices.Rubric RubricField;
        
        private int RubricIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevelTitle {
            get {
                return this.LevelTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.LevelTitleField, value) != true)) {
                    this.LevelTitleField = value;
                    this.RaisePropertyChanged("LevelTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RangeEnd {
            get {
                return this.RangeEndField;
            }
            set {
                if ((this.RangeEndField.Equals(value) != true)) {
                    this.RangeEndField = value;
                    this.RaisePropertyChanged("RangeEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RangeStart {
            get {
                return this.RangeStartField;
            }
            set {
                if ((this.RangeStartField.Equals(value) != true)) {
                    this.RangeStartField = value;
                    this.RaisePropertyChanged("RangeStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChemProV.Library.OsbleRemoteServices.Rubric Rubric {
            get {
                return this.RubricField;
            }
            set {
                if ((object.ReferenceEquals(this.RubricField, value) != true)) {
                    this.RubricField = value;
                    this.RaisePropertyChanged("Rubric");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RubricID {
            get {
                return this.RubricIDField;
            }
            set {
                if ((this.RubricIDField.Equals(value) != true)) {
                    this.RubricIDField = value;
                    this.RaisePropertyChanged("RubricID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="OsbleRemoteServices.OsbleService")]
    public interface OsbleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbleService/GetCourses", ReplyAction="urn:OsbleService/GetCoursesResponse")]
        System.IAsyncResult BeginGetCourses(string authToken, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course> EndGetCourses(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbleService/GetCourseAssignments", ReplyAction="urn:OsbleService/GetCourseAssignmentsResponse")]
        System.IAsyncResult BeginGetCourseAssignments(int courseId, string authToken, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> EndGetCourseAssignments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:OsbleService/GetCourseRole", ReplyAction="urn:OsbleService/GetCourseRoleResponse")]
        System.IAsyncResult BeginGetCourseRole(int courseId, string authToken, System.AsyncCallback callback, object asyncState);
        
        ChemProV.Library.OsbleRemoteServices.CourseRole EndGetCourseRole(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface OsbleServiceChannel : ChemProV.Library.OsbleRemoteServices.OsbleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCoursesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCoursesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCourseAssignmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCourseAssignmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCourseRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCourseRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ChemProV.Library.OsbleRemoteServices.CourseRole Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ChemProV.Library.OsbleRemoteServices.CourseRole)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OsbleServiceClient : System.ServiceModel.ClientBase<ChemProV.Library.OsbleRemoteServices.OsbleService>, ChemProV.Library.OsbleRemoteServices.OsbleService {
        
        private BeginOperationDelegate onBeginGetCoursesDelegate;
        
        private EndOperationDelegate onEndGetCoursesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCoursesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCourseAssignmentsDelegate;
        
        private EndOperationDelegate onEndGetCourseAssignmentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCourseAssignmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCourseRoleDelegate;
        
        private EndOperationDelegate onEndGetCourseRoleDelegate;
        
        private System.Threading.SendOrPostCallback onGetCourseRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public OsbleServiceClient() {
        }
        
        public OsbleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OsbleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsbleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OsbleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetCoursesCompletedEventArgs> GetCoursesCompleted;
        
        public event System.EventHandler<GetCourseAssignmentsCompletedEventArgs> GetCourseAssignmentsCompleted;
        
        public event System.EventHandler<GetCourseRoleCompletedEventArgs> GetCourseRoleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ChemProV.Library.OsbleRemoteServices.OsbleService.BeginGetCourses(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourses(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course> ChemProV.Library.OsbleRemoteServices.OsbleService.EndGetCourses(System.IAsyncResult result) {
            return base.Channel.EndGetCourses(result);
        }
        
        private System.IAsyncResult OnBeginGetCourses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return ((ChemProV.Library.OsbleRemoteServices.OsbleService)(this)).BeginGetCourses(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetCourses(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course> retVal = ((ChemProV.Library.OsbleRemoteServices.OsbleService)(this)).EndGetCourses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCoursesCompleted(object state) {
            if ((this.GetCoursesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCoursesCompleted(this, new GetCoursesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCoursesAsync(string authToken) {
            this.GetCoursesAsync(authToken, null);
        }
        
        public void GetCoursesAsync(string authToken, object userState) {
            if ((this.onBeginGetCoursesDelegate == null)) {
                this.onBeginGetCoursesDelegate = new BeginOperationDelegate(this.OnBeginGetCourses);
            }
            if ((this.onEndGetCoursesDelegate == null)) {
                this.onEndGetCoursesDelegate = new EndOperationDelegate(this.OnEndGetCourses);
            }
            if ((this.onGetCoursesCompletedDelegate == null)) {
                this.onGetCoursesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCoursesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCoursesDelegate, new object[] {
                        authToken}, this.onEndGetCoursesDelegate, this.onGetCoursesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ChemProV.Library.OsbleRemoteServices.OsbleService.BeginGetCourseAssignments(int courseId, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourseAssignments(courseId, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> ChemProV.Library.OsbleRemoteServices.OsbleService.EndGetCourseAssignments(System.IAsyncResult result) {
            return base.Channel.EndGetCourseAssignments(result);
        }
        
        private System.IAsyncResult OnBeginGetCourseAssignments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int courseId = ((int)(inValues[0]));
            string authToken = ((string)(inValues[1]));
            return ((ChemProV.Library.OsbleRemoteServices.OsbleService)(this)).BeginGetCourseAssignments(courseId, authToken, callback, asyncState);
        }
        
        private object[] OnEndGetCourseAssignments(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> retVal = ((ChemProV.Library.OsbleRemoteServices.OsbleService)(this)).EndGetCourseAssignments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCourseAssignmentsCompleted(object state) {
            if ((this.GetCourseAssignmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCourseAssignmentsCompleted(this, new GetCourseAssignmentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCourseAssignmentsAsync(int courseId, string authToken) {
            this.GetCourseAssignmentsAsync(courseId, authToken, null);
        }
        
        public void GetCourseAssignmentsAsync(int courseId, string authToken, object userState) {
            if ((this.onBeginGetCourseAssignmentsDelegate == null)) {
                this.onBeginGetCourseAssignmentsDelegate = new BeginOperationDelegate(this.OnBeginGetCourseAssignments);
            }
            if ((this.onEndGetCourseAssignmentsDelegate == null)) {
                this.onEndGetCourseAssignmentsDelegate = new EndOperationDelegate(this.OnEndGetCourseAssignments);
            }
            if ((this.onGetCourseAssignmentsCompletedDelegate == null)) {
                this.onGetCourseAssignmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCourseAssignmentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCourseAssignmentsDelegate, new object[] {
                        courseId,
                        authToken}, this.onEndGetCourseAssignmentsDelegate, this.onGetCourseAssignmentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ChemProV.Library.OsbleRemoteServices.OsbleService.BeginGetCourseRole(int courseId, string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCourseRole(courseId, authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ChemProV.Library.OsbleRemoteServices.CourseRole ChemProV.Library.OsbleRemoteServices.OsbleService.EndGetCourseRole(System.IAsyncResult result) {
            return base.Channel.EndGetCourseRole(result);
        }
        
        private System.IAsyncResult OnBeginGetCourseRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int courseId = ((int)(inValues[0]));
            string authToken = ((string)(inValues[1]));
            return ((ChemProV.Library.OsbleRemoteServices.OsbleService)(this)).BeginGetCourseRole(courseId, authToken, callback, asyncState);
        }
        
        private object[] OnEndGetCourseRole(System.IAsyncResult result) {
            ChemProV.Library.OsbleRemoteServices.CourseRole retVal = ((ChemProV.Library.OsbleRemoteServices.OsbleService)(this)).EndGetCourseRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCourseRoleCompleted(object state) {
            if ((this.GetCourseRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCourseRoleCompleted(this, new GetCourseRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCourseRoleAsync(int courseId, string authToken) {
            this.GetCourseRoleAsync(courseId, authToken, null);
        }
        
        public void GetCourseRoleAsync(int courseId, string authToken, object userState) {
            if ((this.onBeginGetCourseRoleDelegate == null)) {
                this.onBeginGetCourseRoleDelegate = new BeginOperationDelegate(this.OnBeginGetCourseRole);
            }
            if ((this.onEndGetCourseRoleDelegate == null)) {
                this.onEndGetCourseRoleDelegate = new EndOperationDelegate(this.OnEndGetCourseRole);
            }
            if ((this.onGetCourseRoleCompletedDelegate == null)) {
                this.onGetCourseRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCourseRoleCompleted);
            }
            base.InvokeAsync(this.onBeginGetCourseRoleDelegate, new object[] {
                        courseId,
                        authToken}, this.onEndGetCourseRoleDelegate, this.onGetCourseRoleCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ChemProV.Library.OsbleRemoteServices.OsbleService CreateChannel() {
            return new OsbleServiceClientChannel(this);
        }
        
        private class OsbleServiceClientChannel : ChannelBase<ChemProV.Library.OsbleRemoteServices.OsbleService>, ChemProV.Library.OsbleRemoteServices.OsbleService {
            
            public OsbleServiceClientChannel(System.ServiceModel.ClientBase<ChemProV.Library.OsbleRemoteServices.OsbleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetCourses(string authToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = authToken;
                System.IAsyncResult _result = base.BeginInvoke("GetCourses", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course> EndGetCourses(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course> _result = ((System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Course>)(base.EndInvoke("GetCourses", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCourseAssignments(int courseId, string authToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = courseId;
                _args[1] = authToken;
                System.IAsyncResult _result = base.BeginInvoke("GetCourseAssignments", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> EndGetCourseAssignments(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment> _result = ((System.Collections.ObjectModel.ObservableCollection<ChemProV.Library.OsbleRemoteServices.Assignment>)(base.EndInvoke("GetCourseAssignments", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCourseRole(int courseId, string authToken, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = courseId;
                _args[1] = authToken;
                System.IAsyncResult _result = base.BeginInvoke("GetCourseRole", _args, callback, asyncState);
                return _result;
            }
            
            public ChemProV.Library.OsbleRemoteServices.CourseRole EndGetCourseRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                ChemProV.Library.OsbleRemoteServices.CourseRole _result = ((ChemProV.Library.OsbleRemoteServices.CourseRole)(base.EndInvoke("GetCourseRole", _args, result)));
                return _result;
            }
        }
    }
}
